AWSTemplateFormatVersion: '2010-09-09'
Description:
  Lambda Create
# ------------------------------------------------------------#
#  Metadata
# ------------------------------------------------------------#
Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: "Lambda Configuration"
        Parameters:
        - FunctionName
        - Description
        - Handler
        - MemorySize
        - Runtime
        - Timeout

# ------------------------------------------------------------#
#  InputParameters
# ------------------------------------------------------------#
Parameters:
  FunctionName:
    Type: String
    Default: "cfn-lmd-inamura"
  Description:
    Type: String
    Default: "cfn-lmd-inamura"
  Handler:
    Type: String
    Default: "index.lambda_handler"
  MemorySize:
    Type: String
    Default: "128"
  Runtime:
    Type: String
    Default: "python3.9"
  Timeout:
    Type: String
    Default: "180"

# ------------------------------------------------------------#
#  Resources
# ------------------------------------------------------------#
Resources:
# ------------------------------------------------------------#
#  Lambda
# ------------------------------------------------------------#
  Lambda:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        ZipFile: |
          import boto3
          import os
          import urllib.parse
          import zipfile
          import glob

          s3 = boto3.client('s3')
        
          def lambda_handler(event, context):
              FileListInZip = []
              Object = urllib.parse.unquote_plus(event['detail']['object']['key'], encoding='utf-8')
              Bucket = urllib.parse.unquote_plus(event['detail']['bucket']['name'], encoding='utf-8')
              FilePath = '/tmp/' + Object
              
              #/tmp/配下保存
              s3.download_file(Bucket, Object, FilePath)

              #zipファイル内一覧取得
              zfile = zipfile.ZipFile(FilePath)
              FileListInZip = zfile.namelist()
              
              #/tmp/配下展開
              zfile.extractall('/tmp/')
              zfile.close()

              #展開したファイルをS3アップロード
              for f in FileListInZip:
                  try:
                      if os.path.isfile('/tmp/' + f):
                          s3.upload_file('/tmp/'+f, Bucket, f)
                  except Exception as e:
                      print(e)
                      pass
              else:
                  pass
              
              #Lambda /tmp/配下削除
              for p in glob.glob('/tmp/' + '*'):
                  if os.path.isfile(p):
                      os.remove(p)

              return 0

      Description: !Ref Description
      FunctionName: !Ref FunctionName
      Handler: !Ref Handler 
      MemorySize: !Ref MemorySize
      Runtime: !Ref Runtime
      Timeout: !Ref Timeout
      Role: !GetAtt LambdaRole.Arn

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${FunctionName}-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "sts:AssumeRole"
            Principal:
              Service: lambda.amazonaws.com
              
      Policies:
        - PolicyName: !Sub "${FunctionName}-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "logs:CreateLogGroup"
                Resource:  !Sub "arn:${AWS::Partition}:logs:*:*:*"

              - Effect: "Allow"
                Action:
                  - "s3:*"
                Resource: !Sub 
                  - "arn:aws:s3:::${BucketName}"
                  - BucketName: {'Fn::ImportValue': cfn-s3-20221126-inamura}
# ------------------------------------------------------------#
# Output Parameters
# ------------------------------------------------------------#                
Outputs:
  LambdaArn:
    Value: !GetAtt Lambda.Arn
    Export:
      Name: !Sub "${FunctionName}-arn"